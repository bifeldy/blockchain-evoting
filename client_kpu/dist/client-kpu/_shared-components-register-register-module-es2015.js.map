{"version":3,"sources":["./node_modules/ng-recaptcha/fesm2015/ng-recaptcha.js","./src/app/_shared/components/fade/fade.component.html","./src/app/_shared/components/register/register.component.html","./src/app/_shared/components/fade/fade.component.css","./src/app/_shared/components/fade/fade.component.ts","./src/app/_shared/components/fade/fade.module.ts","./src/app/_shared/components/register/register.component.css","./src/app/_shared/components/register/register.component.ts","./src/app/_shared/components/register/register.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AAC0J;AAC9J;AACA;AACY;;AAEhE,+BAA+B,4DAAc;AAC7C,+BAA+B,4DAAc;AAC7C,4BAA4B,4DAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ,UAAU,WAAW,4BAA4B,UAAU;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yEAAiB,oEAAoE,+CAAE;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yEAAiB;AAC7B,gCAAgC,oDAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,wDAAU;AAC9D,IAAI,gEAAU;AACd,IAAI,qDAAO,IAAI,4DAAM,CAAC,yDAAW;AACjC,IAAI,qDAAO,IAAI,8DAAQ,KAAK,qDAAO,IAAI,4DAAM;AAC7C,IAAI,qDAAO,IAAI,8DAAQ,KAAK,qDAAO,IAAI,4DAAM;AAC7C,IAAI,qDAAO,IAAI,8DAAQ,KAAK,qDAAO,IAAI,4DAAM;AAC7C,IAAI,wDAAU;AACd;AACA;;AAEA,+BAA+B,4DAAc;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,SAAS;AAC1C,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,iEAAW;AACf,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,qBAAqB,wDAAU;AAC/B,IAAI,+DAAS;AACb;AACA;AACA;AACA,KAAK;AACL,IAAI,qDAAO,IAAI,8DAAQ,KAAK,qDAAO,IAAI,4DAAM;AAC7C,IAAI,wDAAU,uBAAuB,wDAAU;AAC/C;AACA,QAAQ,oDAAM;AACd;;AAEA;AACA;AACA,wBAAwB,wDAAU;AAClC,IAAI,8DAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wDAAU;AAChD,IAAI,8DAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,kCAAkC,4DAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yEAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4CAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA,4BAA4B,4CAAO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","file":"_shared-components-register-register-module-es2015.js","sourcesContent":["import { __decorate, __param, __metadata } from 'tslib';\nimport { InjectionToken, Injectable, Inject, PLATFORM_ID, Optional, EventEmitter, Input, HostBinding, Output, Component, ElementRef, NgZone, NgModule, HostListener, Directive, forwardRef } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { of, BehaviorSubject, Subject } from 'rxjs';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\n\nconst RECAPTCHA_LANGUAGE = new InjectionToken('recaptcha-language');\nconst RECAPTCHA_BASE_URL = new InjectionToken('recaptcha-base-url');\nconst RECAPTCHA_NONCE = new InjectionToken('recaptcha-nonce-tag');\nfunction loadScript(renderMode, onLoaded, urlParams, url, nonce) {\n    window.ng2recaptchaloaded = () => {\n        onLoaded(grecaptcha);\n    };\n    const script = document.createElement('script');\n    script.innerHTML = '';\n    const baseUrl = url || 'https://www.google.com/recaptcha/api.js';\n    script.src = `${baseUrl}?render=${renderMode}&onload=ng2recaptchaloaded${urlParams}`;\n    if (nonce) {\n        // tslint:disable-next-line:no-any Remove \"any\" cast once we upgrade Angular to 7 and TypeScript along with it\n        script.nonce = nonce;\n    }\n    script.async = true;\n    script.defer = true;\n    document.head.appendChild(script);\n}\nlet RecaptchaLoaderService = RecaptchaLoaderService_1 = class RecaptchaLoaderService {\n    constructor(\n    // tslint:disable-next-line:no-any\n    platformId, language, baseUrl, nonce) {\n        this.platformId = platformId;\n        this.language = language;\n        this.baseUrl = baseUrl;\n        this.nonce = nonce;\n        this.init();\n        this.ready = isPlatformBrowser(this.platformId) ? RecaptchaLoaderService_1.ready.asObservable() : of();\n    }\n    /** @internal */\n    init() {\n        if (RecaptchaLoaderService_1.ready) {\n            return;\n        }\n        if (isPlatformBrowser(this.platformId)) {\n            const subject = new BehaviorSubject(null);\n            RecaptchaLoaderService_1.ready = subject;\n            const langParam = this.language ? '&hl=' + this.language : '';\n            loadScript('explicit', (grecaptcha) => subject.next(grecaptcha), langParam, this.baseUrl, this.nonce);\n        }\n    }\n};\n/**\n * @internal\n * @nocollapse\n */\nRecaptchaLoaderService.ready = null;\nRecaptchaLoaderService = RecaptchaLoaderService_1 = __decorate([\n    Injectable(),\n    __param(0, Inject(PLATFORM_ID)),\n    __param(1, Optional()), __param(1, Inject(RECAPTCHA_LANGUAGE)),\n    __param(2, Optional()), __param(2, Inject(RECAPTCHA_BASE_URL)),\n    __param(3, Optional()), __param(3, Inject(RECAPTCHA_NONCE)),\n    __metadata(\"design:paramtypes\", [Object, String, String, String])\n], RecaptchaLoaderService);\nvar RecaptchaLoaderService_1;\n\nconst RECAPTCHA_SETTINGS = new InjectionToken('recaptcha-settings');\n\nlet nextId = 0;\nlet RecaptchaComponent = class RecaptchaComponent {\n    constructor(elementRef, loader, zone, settings) {\n        this.elementRef = elementRef;\n        this.loader = loader;\n        this.zone = zone;\n        this.id = `ngrecaptcha-${nextId++}`;\n        this.resolved = new EventEmitter();\n        if (settings) {\n            this.siteKey = settings.siteKey;\n            this.theme = settings.theme;\n            this.type = settings.type;\n            this.size = settings.size;\n            this.badge = settings.badge;\n        }\n    }\n    ngAfterViewInit() {\n        this.subscription = this.loader.ready.subscribe((grecaptcha) => {\n            if (grecaptcha != null && grecaptcha.render instanceof Function) {\n                this.grecaptcha = grecaptcha;\n                this.renderRecaptcha();\n            }\n        });\n    }\n    ngOnDestroy() {\n        // reset the captcha to ensure it does not leave anything behind\n        // after the component is no longer needed\n        this.grecaptchaReset();\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    /**\n     * Executes the invisible recaptcha.\n     * Does nothing if component's size is not set to \"invisible\".\n     */\n    execute() {\n        if (this.size !== 'invisible') {\n            return;\n        }\n        if (this.widget != null) {\n            this.grecaptcha.execute(this.widget);\n        }\n        else {\n            // delay execution of recaptcha until it actually renders\n            this.executeRequested = true;\n        }\n    }\n    reset() {\n        if (this.widget != null) {\n            if (this.grecaptcha.getResponse(this.widget)) {\n                // Only emit an event in case if something would actually change.\n                // That way we do not trigger \"touching\" of the control if someone does a \"reset\"\n                // on a non-resolved captcha.\n                this.resolved.emit(null);\n            }\n            this.grecaptchaReset();\n        }\n    }\n    /** @internal */\n    expired() {\n        this.resolved.emit(null);\n    }\n    /** @internal */\n    captchaResponseCallback(response) {\n        this.resolved.emit(response);\n    }\n    /** @internal */\n    grecaptchaReset() {\n        if (this.widget != null) {\n            this.zone.runOutsideAngular(() => this.grecaptcha.reset(this.widget));\n        }\n    }\n    /** @internal */\n    renderRecaptcha() {\n        this.widget = this.grecaptcha.render(this.elementRef.nativeElement, {\n            badge: this.badge,\n            callback: (response) => {\n                this.zone.run(() => this.captchaResponseCallback(response));\n            },\n            'expired-callback': () => {\n                this.zone.run(() => this.expired());\n            },\n            sitekey: this.siteKey,\n            size: this.size,\n            tabindex: this.tabIndex,\n            theme: this.theme,\n            type: this.type,\n        });\n        if (this.executeRequested === true) {\n            this.executeRequested = false;\n            this.execute();\n        }\n    }\n};\n__decorate([\n    Input(),\n    HostBinding('attr.id'),\n    __metadata(\"design:type\", Object)\n], RecaptchaComponent.prototype, \"id\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], RecaptchaComponent.prototype, \"siteKey\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], RecaptchaComponent.prototype, \"theme\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], RecaptchaComponent.prototype, \"type\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], RecaptchaComponent.prototype, \"size\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], RecaptchaComponent.prototype, \"tabIndex\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], RecaptchaComponent.prototype, \"badge\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], RecaptchaComponent.prototype, \"resolved\", void 0);\nRecaptchaComponent = __decorate([\n    Component({\n        exportAs: 'reCaptcha',\n        selector: 're-captcha',\n        template: ``\n    }),\n    __param(3, Optional()), __param(3, Inject(RECAPTCHA_SETTINGS)),\n    __metadata(\"design:paramtypes\", [ElementRef,\n        RecaptchaLoaderService,\n        NgZone, Object])\n], RecaptchaComponent);\n\nlet RecaptchaCommonModule = class RecaptchaCommonModule {\n};\nRecaptchaCommonModule = __decorate([\n    NgModule({\n        declarations: [\n            RecaptchaComponent,\n        ],\n        exports: [\n            RecaptchaComponent,\n        ],\n    })\n], RecaptchaCommonModule);\n\nlet RecaptchaModule = RecaptchaModule_1 = class RecaptchaModule {\n    // We need this to maintain backwards-compatibility with v4. Removing this will be a breaking change\n    static forRoot() {\n        return RecaptchaModule_1;\n    }\n};\nRecaptchaModule = RecaptchaModule_1 = __decorate([\n    NgModule({\n        exports: [\n            RecaptchaComponent,\n        ],\n        imports: [\n            RecaptchaCommonModule,\n        ],\n        providers: [\n            RecaptchaLoaderService,\n        ],\n    })\n], RecaptchaModule);\nvar RecaptchaModule_1;\n\nconst RECAPTCHA_V3_SITE_KEY = new InjectionToken('recaptcha-v3-site-key');\n/**\n * The main service for working with reCAPTCHA v3 APIs.\n *\n * Use the `execute` method for executing a single action, and\n * `onExecute` observable for listening to all actions at once.\n */\nlet ReCaptchaV3Service = class ReCaptchaV3Service {\n    constructor(zone, siteKey, \n    // tslint:disable-next-line:no-any\n    platformId, baseUrl, nonce) {\n        /** @internal */\n        this.onLoadComplete = (grecaptcha) => {\n            this.grecaptcha = grecaptcha;\n            if (this.actionBacklog && this.actionBacklog.length > 0) {\n                this.actionBacklog.forEach(([action, subject]) => this.executeActionWithSubject(action, subject));\n                this.actionBacklog = undefined;\n            }\n        };\n        this.zone = zone;\n        this.isBrowser = isPlatformBrowser(platformId);\n        this.siteKey = siteKey;\n        this.nonce = nonce;\n        this.baseUrl = baseUrl;\n        this.init();\n    }\n    get onExecute() {\n        if (!this.onExecuteSubject) {\n            this.onExecuteSubject = new Subject();\n            this.onExecuteObservable = this.onExecuteSubject.asObservable();\n        }\n        return this.onExecuteObservable;\n    }\n    /**\n     * Executes the provided `action` with reCAPTCHA v3 API.\n     * Use the emitted token value for verification purposes on the backend.\n     *\n     * For more information about reCAPTCHA v3 actions and tokens refer to the official documentation at\n     * https://developers.google.com/recaptcha/docs/v3.\n     *\n     * @param {string} action the action to execute\n     * @returns {Observable<string>} an `Observable` that will emit the reCAPTCHA v3 string `token` value whenever ready.\n     * The returned `Observable` completes immediately after emitting a value.\n     */\n    execute(action) {\n        const subject = new Subject();\n        if (this.isBrowser) {\n            if (!this.grecaptcha) {\n                // todo: add to array of later executions\n                if (!this.actionBacklog) {\n                    this.actionBacklog = [];\n                }\n                this.actionBacklog.push([action, subject]);\n            }\n            else {\n                this.executeActionWithSubject(action, subject);\n            }\n        }\n        return subject.asObservable();\n    }\n    /** @internal */\n    executeActionWithSubject(action, subject) {\n        this.zone.runOutsideAngular(() => {\n            // tslint:disable-next-line:no-any\n            this.grecaptcha.execute(this.siteKey, { action }).then((token) => {\n                this.zone.run(() => {\n                    subject.next(token);\n                    subject.complete();\n                    if (this.onExecuteSubject) {\n                        this.onExecuteSubject.next({ action, token });\n                    }\n                });\n            });\n        });\n    }\n    /** @internal */\n    init() {\n        if (this.isBrowser) {\n            if ('grecaptcha' in window) {\n                this.grecaptcha = grecaptcha;\n            }\n            else {\n                loadScript(this.siteKey, this.onLoadComplete, '', this.baseUrl, this.nonce);\n            }\n        }\n    }\n};\nReCaptchaV3Service = __decorate([\n    Injectable(),\n    __param(1, Inject(RECAPTCHA_V3_SITE_KEY)),\n    __param(2, Inject(PLATFORM_ID)),\n    __param(3, Optional()), __param(3, Inject(RECAPTCHA_BASE_URL)),\n    __param(4, Optional()), __param(4, Inject(RECAPTCHA_NONCE)),\n    __metadata(\"design:paramtypes\", [NgZone, String, Object, String, String])\n], ReCaptchaV3Service);\n\nlet RecaptchaV3Module = class RecaptchaV3Module {\n};\nRecaptchaV3Module = __decorate([\n    NgModule({\n        providers: [\n            ReCaptchaV3Service,\n        ],\n    })\n], RecaptchaV3Module);\n\nlet RecaptchaValueAccessorDirective = RecaptchaValueAccessorDirective_1 = class RecaptchaValueAccessorDirective {\n    constructor(host) {\n        this.host = host;\n    }\n    writeValue(value) {\n        if (!value) {\n            this.host.reset();\n        }\n    }\n    registerOnChange(fn) { this.onChange = fn; }\n    registerOnTouched(fn) { this.onTouched = fn; }\n    onResolve($event) {\n        if (this.onChange) {\n            this.onChange($event);\n        }\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n};\n__decorate([\n    HostListener('resolved', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String]),\n    __metadata(\"design:returntype\", void 0)\n], RecaptchaValueAccessorDirective.prototype, \"onResolve\", null);\nRecaptchaValueAccessorDirective = RecaptchaValueAccessorDirective_1 = __decorate([\n    Directive({\n        providers: [\n            {\n                multi: true,\n                provide: NG_VALUE_ACCESSOR,\n                // tslint:disable-next-line:no-forward-ref\n                useExisting: forwardRef(() => RecaptchaValueAccessorDirective_1),\n            },\n        ],\n        // tslint:disable-next-line:directive-selector\n        selector: 're-captcha[formControlName],re-captcha[formControl],re-captcha[ngModel]',\n    }),\n    __metadata(\"design:paramtypes\", [RecaptchaComponent])\n], RecaptchaValueAccessorDirective);\nvar RecaptchaValueAccessorDirective_1;\n\nlet RecaptchaFormsModule = class RecaptchaFormsModule {\n};\nRecaptchaFormsModule = __decorate([\n    NgModule({\n        declarations: [\n            RecaptchaValueAccessorDirective,\n        ],\n        exports: [RecaptchaValueAccessorDirective],\n        imports: [FormsModule, RecaptchaCommonModule],\n    })\n], RecaptchaFormsModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RECAPTCHA_BASE_URL, RECAPTCHA_LANGUAGE, RECAPTCHA_NONCE, RECAPTCHA_SETTINGS, RECAPTCHA_V3_SITE_KEY, ReCaptchaV3Service, RecaptchaComponent, RecaptchaFormsModule, RecaptchaLoaderService, RecaptchaModule, RecaptchaV3Module, RecaptchaValueAccessorDirective, RecaptchaCommonModule as ɵa };\n//# sourceMappingURL=ng-recaptcha.js.map\n","export default \"<div *ngIf=\\\"show\\\" class=\\\"fade\\\" [@state]=\\\"state\\\" (@state.done)=\\\"animationDone($event)\\\">\\n  <ng-content #fadeableContent></ng-content>\\n</div>\"","export default \"<div class=\\\"center-screen\\\" [ngStyle]=\\\"{\\n  'background-image': 'url(' + bgRegisterImg + ')'\\n}\\\" *ngIf=\\\"!this.as.currentUserValue\\\">\\n  <div class=\\\"container py-3\\\">\\n    <div class=\\\"row justify-content-center no-gutters\\\">\\n      <div class=\\\"col-lg-7 col-md-9\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"fg\\\" class=\\\"m-2\\\">\\n              <div class=\\\"text-center mb-4\\\">\\n                <img class=\\\"mb-4\\\" src=\\\"/favicon.ico\\\" alt=\\\"\\\" />\\n                <h1 class=\\\"h3 mb-3 font-weight-normal\\\">Hai, Selamat Datang! >_<\\\"</h1>\\n                <p class=\\\"text-danger\\\">{{ registerInfo }}</p>\\n              </div>\\n              <app-fade [show]=\\\"registerStep == 1\\\">\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"nik\\\" class=\\\"col-md-4 col-form-label text-md-right\\\">NIK</label>\\n                  <div class=\\\"col-md-8\\\">\\n                    <input type=\\\"text\\\" id=\\\"nik\\\" [attr.disabled]=\\\"registerStep != 1 ? '' : null\\\" class=\\\"form-control {{\\n                      !fg.get('nik').valid && fg.get('nik').touched ? 'is-invalid' : ''\\n                    }}\\\" placeholder=\\\"Nomor Induk Kependudukan\\\" required autofocus formControlName=\\\"nik\\\" autocomplete=\\\"off\\\" />\\n                    <span class=\\\"invalid-feedback\\\" role=\\\"alert\\\">\\n                      <strong>NIK Tidak Valid!</strong>\\n                    </span>\\n                    <span role=\\\"alert\\\" *ngIf=\\\"registerErrorData && registerErrorData.nik\\\" style=\\\"font-size: 80%; color: #dc3545;\\\">\\n                      <strong>{{ registerErrorData.nik }}</strong>\\n                    </span>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"name\\\" class=\\\"col-md-4 col-form-label text-md-right\\\">Nama</label>\\n                  <div class=\\\"col-md-8\\\">\\n                    <input type=\\\"text\\\" id=\\\"name\\\" [attr.disabled]=\\\"registerStep != 1 ? '' : null\\\" class=\\\"form-control {{\\n                      !fg.get('name').valid && fg.get('name').touched ? 'is-invalid' : ''\\n                    }}\\\" placeholder=\\\"Nama Lengkap\\\" required formControlName=\\\"name\\\" autocomplete=\\\"off\\\" />\\n                    <span class=\\\"invalid-feedback\\\" role=\\\"alert\\\">\\n                      <strong>Nama Tidak Boleh Kosong!</strong>\\n                    </span>\\n                  </div>\\n                </div>\\n              </app-fade>\\n              <app-fade [show]=\\\"registerStep == 2\\\">\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"email\\\" class=\\\"col-md-4 col-form-label text-md-right\\\">E-Mail</label>\\n                  <div class=\\\"col-md-8\\\">\\n                    <input type=\\\"email\\\" id=\\\"email\\\" [attr.disabled]=\\\"registerStep != 2 ? '' : null\\\" class=\\\"form-control {{\\n                      !fg.get('email').valid && fg.get('email').touched ? 'is-invalid' : ''\\n                    }}\\\" placeholder=\\\"Alamat Surat Elektronik\\\" required autofocus formControlName=\\\"email\\\" autocomplete=\\\"off\\\" />\\n                    <span class=\\\"invalid-feedback\\\" role=\\\"alert\\\">\\n                      <strong>Format Email Tidak Benar!</strong>\\n                    </span>\\n                    <span role=\\\"alert\\\" *ngIf=\\\"registerErrorData && registerErrorData.email\\\" style=\\\"font-size: 80%; color: #dc3545;\\\">\\n                      <strong>{{ registerErrorData.email }}</strong>\\n                    </span>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"phone\\\" class=\\\"col-md-4 col-form-label text-md-right\\\">No. HP</label>\\n                  <div class=\\\"col-md-8\\\">\\n                    <input type=\\\"text\\\" id=\\\"phone\\\" [attr.disabled]=\\\"registerStep != 2 ? '' : null\\\" class=\\\"form-control {{\\n                      !fg.get('phone').valid && fg.get('phone').touched ? 'is-invalid' : ''\\n                    }}\\\" placeholder=\\\"Nomor Telepon Genggam\\\" required formControlName=\\\"phone\\\" autocomplete=\\\"off\\\" />\\n                    <span class=\\\"invalid-feedback\\\" role=\\\"alert\\\">\\n                      <strong>Telepon Tidak Valid!</strong>\\n                    </span>\\n                    <span role=\\\"alert\\\" *ngIf=\\\"registerErrorData && registerErrorData.phone\\\" style=\\\"font-size: 80%; color: #dc3545;\\\">\\n                      <strong>{{ registerErrorData.phone }}</strong>\\n                    </span>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"password\\\" class=\\\"col-md-4 col-form-label text-md-right\\\">Kata Sandi</label>\\n                  <div class=\\\"col-md-8\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col pr-0\\\">\\n                        <input type=\\\"{{ showPassword ? 'text' : 'password' }}\\\" id=\\\"password\\\" [attr.disabled]=\\\"registerStep != 2 ? '' : null\\\" class=\\\"col form-control {{\\n                            !fg.get('password').valid && fg.get('password').touched ? 'is-invalid' : ''\\n                          }}\\\" placeholder=\\\"Kata Sandi\\\" required formControlName=\\\"password\\\" autocomplete=\\\"off\\\" />\\n                      </div>\\n                      <a class=\\\"btn btn-link text-secondary px-2 mr-3\\\" (click)=\\\"showHidePassword()\\\">\\n                        <i class=\\\"fa fa-fw fa-eye\\\" *ngIf=\\\"showPassword\\\"></i>\\n                        <i class=\\\"fa fa-fw fa-eye-slash\\\" *ngIf=\\\"!showPassword\\\"></i>\\n                      </a>\\n                    </div>\\n                    <span role=\\\"alert\\\" *ngIf=\\\"!fg.get('password').valid && fg.get('password').touched\\\" style=\\\"font-size: 80%; color: #dc3545;\\\">\\n                      <ng-container *ngIf=\\\"fg.controls['password'].hasError('noPasswordMin'); else elsePassword\\\">\\n                        <strong>Password Minimal 8 Karakter!</strong>\\n                      </ng-container>\\n                      <ng-template #elsePassword>\\n                        <strong>Password Tidak Boleh Kosong!</strong>\\n                      </ng-template>\\n                    </span>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"reTypePassword\\\" class=\\\"col-md-4 col-form-label text-md-right\\\">Ulangi Kata Sandi</label>\\n                  <div class=\\\"col-md-8\\\">\\n                    <input type=\\\"password\\\" id=\\\"reTypePassword\\\" [attr.disabled]=\\\"registerStep != 2 ? '' : null\\\" class=\\\"form-control {{\\n                      !fg.get('reTypePassword').valid && fg.get('reTypePassword').touched ? 'is-invalid' : ''\\n                    }}\\\" placeholder=\\\"Konfirmasi Password\\\" required formControlName=\\\"reTypePassword\\\" autocomplete=\\\"off\\\" />\\n                    <span class=\\\"invalid-feedback\\\" role=\\\"alert\\\">\\n                      <ng-container *ngIf=\\\"fg.controls['reTypePassword'].hasError('noPasswordMatch');else elseConfPass\\\">\\n                        <strong>Password Tidak Sesuai!</strong>\\n                      </ng-container>\\n                      <ng-template #elseConfPass>\\n                        <strong>Password Tidak Boleh Kosong!</strong>\\n                      </ng-template>\\n                    </span>\\n                  </div>\\n                </div>\\n              </app-fade>\\n              <app-fade [show]=\\\"registerStep == 3\\\">\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"ethAccount\\\" class=\\\"col-md-4 col-form-label text-md-right\\\">Punya Ethereum?</label>\\n                  <div class=\\\"col-md-8\\\">\\n                    <select id=\\\"ethAccount\\\" class=\\\"form-control {{\\n                        !fg.get('ethAccount').valid && fg.get('ethAccount').touched ? 'is-invalid' : ''\\n                      }}\\\" name=\\\"ethAccount\\\" required formControlName=\\\"ethAccount\\\">\\n                      <option value=\\\"\\\" disabled>Pilih Salah Satu!</option>\\n                      <option value=\\\"tidak\\\">Tidak, Buat Akun Baru Sekarang</option>\\n                      <option value=\\\"ya\\\">Ya, Gunakan Akun Lama Saya</option>\\n                    </select>\\n                    <span class=\\\"invalid-feedback\\\" role=\\\"alert\\\">\\n                      <strong>Pilih Salah Satu!</strong>\\n                    </span>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"ethAccountImport\\\" class=\\\"col-md-4 col-form-label text-md-right\\\">Private Key</label>\\n                  <div class=\\\"col-md-8\\\">\\n                    <div class=\\\"custom-file\\\">\\n                      <input type=\\\"file\\\" class=\\\"custom-file-input\\\" id=\\\"ethAccountFile\\\"\\n                        (change)=\\\"onFileSelected($event)\\\" [disabled]=\\\"registerFormVal.ethAccount != 'ya'\\\" />\\n                      <label class=\\\"custom-file-label text-truncate\\\" for=\\\"ethAccountFile\\\" style=\\\"z-index: 0;\\\">{{ secretKeyFileName }}</label>\\n                    </div>\\n                    <textarea id=\\\"ethAccountImport\\\" rows=\\\"5\\\" [attr.disabled]=\\\"registerFormVal.ethAccount != 'ya' ? '' : null\\\"\\n                      class=\\\"form-control\\\" placeholder=\\\"{{ secretKeyFileContent }}\\\" formControlName=\\\"ethAccountImport\\\">\\n                    </textarea>\\n                    <span role=\\\"alert\\\" *ngIf=\\\"registerErrorData && registerErrorData.ethAccountImport\\\" style=\\\"font-size: 80%; color: #dc3545;\\\">\\n                      <strong>{{ registerErrorData.ethAccountImport }}</strong>\\n                    </span>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"walletPassword\\\" class=\\\"col-md-4 col-form-label text-md-right\\\">Wallet Password</label>\\n                  <div class=\\\"col-md-8\\\">\\n                    <input type=\\\"password\\\" id=\\\"walletPassword\\\" class=\\\"form-control\\\" [attr.disabled]=\\\"registerFormVal.ethAccount != 'ya' ? '' : null\\\"\\n                      placeholder=\\\"Wallet Passphrase / Password\\\" formControlName=\\\"walletPassword\\\" autocomplete=\\\"off\\\" />\\n                    <span class=\\\"invalid-feedback\\\" role=\\\"alert\\\">\\n                      <strong>Wallet Tidak Boleh Kosong!</strong>\\n                    </span>\\n                  </div>\\n                </div>\\n              </app-fade>\\n              <div class=\\\"form-group row\\\" *ngIf=\\\"registerStep == 1\\\">\\n                <div class=\\\"col-md-8 offset-md-4\\\">\\n                  <re-captcha #captchaRef formControlName=\\\"googleCaptchaResponse\\\" siteKey=\\\"6Ld4Bt4UAAAAAKJQ_jfqtWdsq9BuARLHag2DBvqK\\\"\\n                    (resolved)=\\\"resolved($event, captchaRef)\\\"></re-captcha>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row mb-0\\\">\\n                <div class=\\\"col-md-4 text-md-right\\\">\\n                  <button class=\\\"btn btn-link btn-block text-decoration-none\\\" type=\\\"button\\\" routerLink=\\\"/login\\\" [disabled]=\\\"submitted\\\">Sudah Punya Akun?</button>\\n                </div>\\n                <div class=\\\"col-md-8\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-6 pr-0\\\">\\n                      <button class=\\\"btn btn-link btn-block\\\" type=\\\"button\\\" [disabled]=\\\"registerStep > 3\\\" (click)=\\\"onRegisterPrevious()\\\">\\n                        <i class=\\\"fa fa-fw fa-arrow-left\\\"></i>\\n                        Previous\\n                      </button>\\n                    </div>\\n                    <div class=\\\"col-6 pl-0\\\">\\n                      <button class=\\\"btn btn-success btn-block text-white\\\" type=\\\"button\\\" (click)=\\\"onRegisterNext()\\\"\\n                        [disabled]=\\\"\\n                          registerStep == 1 && !kpuRiUserData ||\\n                          registerStep == 2 && !(\\n                            fg.get('email').valid && fg.get('email').touched &&\\n                            fg.get('phone').valid && fg.get('phone').touched &&\\n                            fg.get('password').valid && fg.get('password').touched &&\\n                            fg.get('reTypePassword').valid && fg.get('reTypePassword').touched\\n                          ) ||\\n                          registerStep == 3 && (\\n                            registerFormVal.ethAccount == 'ya' && (\\n                              registerFormVal.ethAccountImport == null ||\\n                              registerFormVal.ethAccountImport == undefined ||\\n                              registerFormVal.ethAccountImport == ''\\n                            ) || (\\n                              registerFormVal.ethAccount == ''\\n                            )\\n                          ) ||\\n                          submitted\\n                        \\\">\\n                        {{ registerStep < 3 ? 'Next' : 'Finish' }}\\n                        <i class=\\\"fa fa-fw fa-arrow-right ml-2\\\" *ngIf=\\\"registerStep < 3\\\"></i>\\n                        <i class=\\\"fa fa-fw fa-check ml-2\\\" *ngIf=\\\"registerStep >= 3\\\"></i>\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-5 col-md-3\\\" [ngStyle]=\\\"{\\n        'background-position': 'center',\\n        'background-size': 'cover',\\n        'background-image': 'url(' + registerImg + ')'\\n      }\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","export default \":host {\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.fade {\\r\\n  opacity: 0;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvX3NoYXJlZC9jb21wb25lbnRzL2ZhZGUvZmFkZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLFVBQVU7QUFDWiIsImZpbGUiOiJzcmMvYXBwL19zaGFyZWQvY29tcG9uZW50cy9mYWRlL2ZhZGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLmZhZGUge1xyXG4gIG9wYWNpdHk6IDA7XHJcbn1cclxuIl19 */\"","import { animate, AnimationEvent, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nexport type FadeState = 'visible' | 'hidden';\n\n@Component({\n  selector: 'app-fade',\n  templateUrl: './fade.component.html',\n  styleUrls: ['./fade.component.css'],\n  animations: [\n    trigger('state', [\n      state(\n        'visible',\n        style({\n          opacity: '1'\n        })\n      ),\n      state(\n        'hidden',\n        style({\n          opacity: '0'\n        })\n      ),\n      transition('* => visible', [animate('500ms ease-out')]),\n      transition('visible => hidden', [animate('500ms ease-out')])\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FadeComponent {\n  state: FadeState;\n  // tslint:disable-next-line: variable-name\n  private _show: boolean;\n  get show() {\n    return this._show;\n  }\n  @Input()\n  set show(value: boolean) {\n    if (value) {\n      this._show = value;\n      this.state = 'visible';\n    } else {\n      this.state = 'hidden';\n    }\n  }\n\n  animationDone(event: AnimationEvent) {\n    if (event.fromState === 'visible' && event.toState === 'hidden') {\n      this._show = false;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FadeComponent } from './fade.component';\n\n@NgModule({\n  declarations: [FadeComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [FadeComponent]\n})\nexport class FadeModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19zaGFyZWQvY29tcG9uZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\n\nimport { AuthService } from '../../services/auth.service';\nimport { GlobalService } from '../../services/global.service';\n\nimport * as CryptoJS from 'crypto-js';\nimport { environment } from 'src/environments/environment';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  fg: FormGroup;\n  submitted = false;\n\n  registerImg = null;\n  bgRegisterImg = '/assets/img/bg-login.svg';\n\n  registerInfo = 'Ayo bergabung dengan kami~';\n  registerErrorData = null;\n\n  kpuRiUserData = null;\n  showPassword = false;\n  googleCaptcha = null;\n\n  secretKeyFileName = 'Upload ETH UTC File ..';\n  secretKeyFileContent = 'Or Paste Ethereum Private Key String Here ..';\n\n  ethereumAddressCreatedImported = null;\n\n  registerStep = 0;\n\n  constructor(\n    private fb: FormBuilder,\n    private gs: GlobalService,\n    private router: Router,\n    public as: AuthService,\n    private us: UserService\n  ) {\n    if (this.as.currentUserValue) {\n      this.router.navigate(['/home']);\n    }\n    this.registerImg = 'https://via.placeholder.com/462x532/' + this.gs.randomColor;\n  }\n\n  get registerFormVal() {\n    return this.fg.value;\n  }\n\n  ngOnInit() {\n    this.registerStep = 1;\n    this.initializeForm();\n  }\n\n  showHidePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  initializeForm(data = null) {\n    this.fg = this.fb.group({\n      nik: [data ? data.nik : null, Validators.compose([\n          Validators.required,\n          Validators.minLength(16),\n          Validators.maxLength(16),\n          Validators.pattern('^[0-9]*$')\n        ])\n      ],\n      name: [data ? data.nama : null, Validators.compose([Validators.required])],\n      email: [data ? data.email : null, Validators.compose([\n          Validators.email,\n          Validators.required\n        ])\n      ],\n      phone: [data ? data.phone : null, Validators.compose([\n          Validators.required,\n          Validators.minLength(9),\n          Validators.maxLength(13),\n          Validators.pattern('^[0-9]*$')\n        ])\n      ],\n      password: [data ? data.password : null, Validators.compose([\n          Validators.required,\n          Validators.minLength(8)\n        ])\n      ],\n      reTypePassword: [data ? data.reTypePassword : null, Validators.compose([Validators.required])],\n      googleCaptchaResponse: [data ? data.googleCaptchaResponse : null, Validators.compose([Validators.required])],\n      ethAccount: [data ? data.ethAccount : '', Validators.compose([Validators.required])],\n      ethAccountImport: [data ? data.ethAccountImport : null],\n      walletPassword: [data ? data.walletPassword : null]\n    }, {\n      validator: this.customValidator\n    });\n  }\n\n  customValidator(control: AbstractControl) {\n    const password: string = control.get('password').value;\n    const confirmPassword: string = control.get('reTypePassword').value;\n    if (password != null && password !== undefined && password !== '' && password.length < 8) {\n      control.get('password').setErrors({ noPasswordMin: true });\n    }\n    if (confirmPassword != null && confirmPassword !== undefined && confirmPassword !== '' && password !== confirmPassword) {\n      control.get('reTypePassword').setErrors({ noPasswordMatch: true });\n    }\n  }\n\n  resolved(captchaResponse, captchaRef) {\n    this.gs.log(`[GOOGLE_CAPTCHA] ${captchaResponse}`);\n    this.registerErrorData = null;\n    this.googleCaptcha = captchaRef;\n    this.fg.value.googleCaptchaResponse = captchaResponse;\n    if (captchaResponse) {\n      this.registerInfo = 'Sedang Mengambil Data ..';\n      const registerTimedOut = setTimeout(() => {\n        this.registerInfo = 'Server Tidak Merespon, Silahkan Coba Lagi Nanti ..';\n      }, 60 * 1000);\n      this.us.cekNik({\n        nik: this.fg.value.nik,\n        name: this.fg.value.name,\n        'g-recaptcha-response': this.fg.value.googleCaptchaResponse\n      }).subscribe(\n        res => {\n          this.gs.log('[KPU_RI-CEK_NIK]', res);\n          if (res.result.message === 'failed') {\n            this.registerInfo = res.result.data.pesan;\n            this.fg.value.googleCaptchaResponse = null;\n            this.kpuRiUserData = null;\n            this.googleCaptcha.reset();\n          } else if (res.result.message === 'success') {\n            this.kpuRiUserData = { ...res.result.data, nik: this.fg.value.nik};\n            Object.keys(this.kpuRiUserData).forEach((key, idx) => {\n              this.kpuRiUserData[key] = this.kpuRiUserData[key].toLowerCase().replace(/\\b[a-zA-Z]/g, (v) => v.toUpperCase());\n            });\n            this.registerInfo = `\n              ${this.kpuRiUserData.nama} - ${this.kpuRiUserData.jenis_kelamin} - ${this.kpuRiUserData.tempat_lahir} -\n              ${this.kpuRiUserData.nik} - ${this.kpuRiUserData.namaKel} - ${this.kpuRiUserData.namaKec} -\n              ${this.kpuRiUserData.namaKabko} - ${this.kpuRiUserData.namaPropinsi}\n            `.replace(/\\n/g, ' ').replace(/ +(?= )/g, '').trim();\n            this.fg.controls.nik.disable();\n            this.fg.controls.name.disable();\n            this.initializeForm({ ...this.kpuRiUserData, ...this.fg.value });\n          }\n          clearTimeout(registerTimedOut);\n        },\n        err => {\n          this.registerInfo = err.error.result.message || err.result.message || err.result.data.pesan;\n          this.googleCaptcha.reset();\n          clearTimeout(registerTimedOut);\n        }\n      );\n    }\n  }\n\n  onRegisterPrevious() {\n    if (this.registerStep <= 1) {\n      this.registerStep = 1;\n    } else {\n      this.registerStep -= 1;\n    }\n  }\n\n  onRegisterNext() {\n    this.registerErrorData = null;\n    if (this.registerStep === 1) {\n      this.checkWebAccount({\n        nik: this.kpuRiUserData.nik\n      });\n    } else if (this.registerStep === 2) {\n      this.checkWebAccount({\n        phone: this.fg.value.phone,\n        email: this.fg.value.email\n      });\n    } else if (this.registerStep === 3) {\n      this.settingUpEthereumAccount();\n    }\n  }\n\n  checkWebAccount(formData) {\n    this.registerInfo = 'Mengecek Data Akun ...';\n    this.us.cekAccount(formData).subscribe(\n      (res: any) => {\n        this.registerInfo = res.result.message;\n        this.registerStep += 1;\n      },\n      err => {\n        this.registerInfo = err.error.result.message || err.error.info;\n        this.registerErrorData = err.error.result || err.error.info;\n        if ('nik' in formData) {\n          this.kpuRiUserData = null;\n          this.fg.controls.nik.enable();\n          this.fg.controls.name.enable();\n          this.googleCaptcha.reset();\n        }\n      }\n    );\n  }\n\n  registerWebAccount() {\n    const userData = {\n      nik: this.kpuRiUserData.nik,\n      name: this.kpuRiUserData.nama,\n      phone: this.fg.value.phone,\n      email: this.fg.value.email,\n      pubKey: this.ethereumAddressCreatedImported,\n      password: CryptoJS.SHA512(this.fg.value.password).toString()\n    };\n    this.gs.log('[REGISTER_WEB_ACCOUNT]', userData);\n    if (this.kpuRiUserData) {\n      this.us.registerAccount(userData).subscribe(\n        (res: any) => {\n          localStorage.setItem(environment.tokenName, res.result.token);\n          this.as.verify(localStorage.getItem(environment.tokenName)).subscribe(\n            success => this.router.navigate(['/home']),\n            error => this.as.logout()\n          );\n        },\n        err => {\n          this.registerInfo = err.error.result.message || err.error.info;\n          this.registerErrorData = err.error.result;\n          this.submitted = false;\n        }\n      );\n    }\n  }\n\n  onFileSelected($event) {\n    if ($event.target.files.length > 0) {\n      const selectedFile = $event.target.files[0];\n      const reader = new FileReader();\n      reader.readAsText(selectedFile);\n      reader.onload = (e) => {\n        this.secretKeyFileName = selectedFile.name;\n        this.fg.controls.ethAccountImport.patchValue((e as any).target.result);\n      };\n    }\n    this.secretKeyFileName = 'Tidak Ada File Dipilih!';\n    this.fg.controls.ethAccountImport.patchValue(null);\n  }\n\n  settingUpEthereumAccount() {\n    this.submitted = true;\n    this.registerInfo = 'Harap Menunggu ...';\n    if (this.fg.value.ethAccount === 'tidak') {\n      this.us.newEthAccount({\n        password: window.btoa(this.fg.value.password)\n      }).subscribe(\n        res => {\n          this.registerInfo = res.result.account.pubKey;\n          this.ethereumAddressCreatedImported = res.result.account.pubKey;\n          // const receipt = res.result.trxTransferCoin;\n          this.registerWebAccount();\n        },\n        err => {\n          this.submitted = false;\n          this.registerInfo = err.error.result.message || err.error.info;\n        }\n      );\n    } else if (this.fg.value.ethAccount === 'ya') {\n      if (\n        this.fg.value.ethAccountImport === null ||\n        this.fg.value.ethAccountImport === undefined ||\n        this.fg.value.ethAccountImport === ''\n      ) {\n        return;\n      }\n      let wallet = false;\n      let secretKey = this.fg.value.ethAccountImport;\n      let walletPassword = window.btoa(this.fg.value.password);\n      try {\n        secretKey = JSON.parse(secretKey);\n        wallet = true;\n        walletPassword = window.btoa(this.fg.value.walletPassword);\n      } catch (e) {\n        this.fg.controls.walletPassword.patchValue(null);\n      }\n      this.us.importEthAccount({\n        password: walletPassword,\n        wallet, secretKey: this.fg.value.ethAccountImport\n      }).subscribe(\n        res => {\n          this.registerInfo = res.result.account.pubKey;\n          this.ethereumAddressCreatedImported = res.result.account.pubKey;\n          // const receipt = res.result.trxTransferCoin;\n          this.registerWebAccount();\n        },\n        err => {\n          this.submitted = false;\n          this.registerInfo = err.error.result.message || err.error.info;\n        }\n      );\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { RecaptchaModule, RecaptchaFormsModule } from 'ng-recaptcha';\n\nimport { RegisterComponent } from './register.component';\nimport { FadeModule } from '../fade/fade.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterComponent\n  }\n];\n\n@NgModule({\n  declarations: [RegisterComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    ReactiveFormsModule,\n    RecaptchaModule,\n    RecaptchaFormsModule,\n    FadeModule\n  ]\n})\nexport class RegisterModule { }\n"],"sourceRoot":"webpack:///"}