{"version":3,"sources":["src/app/_shared/components/modal-election-detail/modal-election-detail.component.html","src/app/_shared/components/modal-election-detail/modal-election-detail.component.css","src/app/_shared/components/modal-election-detail/modal-election-detail.component.ts","src/app/_shared/components/modal-election-detail/modal-election-detail.module.ts","src/app/_shared/services/election.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div *ngIf=\\\"isModalOpen\\\" [config]=\\\"{ show: true }\\\" bsModal #modalElectionDetail=\\\"bs-modal\\\" (onHidden)=\\\"onHidden()\\\"\\n  class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-auto-name\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered modal-lg\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header modal-header\\\" [ngStyle]=\\\"{\\n        'background-image': 'url(' + election.electionImage + ')',\\n        'background-size': 'cover',\\n        'background-position': 'center center'\\n      }\\\">\\n        <h1> &nbsp; <br /> &nbsp; </h1>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"close\\\" (click)=\\\"hideModal()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"container-fluid\\\">\\n          <div class=\\\"row mb-3\\\">\\n            <h3 class=\\\"w-100 text-center pointer text-primary\\\">\\n              <a routerLink=\\\"/election/{{ election.id }}\\\" class=\\\"text-decoration-none pointer\\\">\\n                {{ election.electionName }}\\n              </a>\\n            </h3>\\n            <h5 class=\\\"text-muted w-100 text-center\\\">\\n              {{ election.electionDescription }}\\n            </h5>\\n          </div>\\n          <div class=\\\"row mb-3\\\">\\n            <div class=\\\"col my-auto p-0\\\">\\n              <div class=\\\"mb-3 col-12 text-center\\\">\\n                <ul class=\\\"list-unstyled row\\\" style=\\\"max-height: 25vh; overflow-y: auto;\\\">\\n                  <li class=\\\"media border-bottom mb-1 p-1 list-group-item-action col-md-6 col-lg-4\\\" *ngFor=\\\"let i of candidateListInfo\\\">\\n                    <img class=\\\"align-self-center mr-3\\\" src=\\\"{{ i.image }}\\\" height=\\\"64px\\\" />\\n                    <div class=\\\"media-body text-truncate text-left\\\">\\n                      <div class=\\\"m-0 pt-2\\\">\\n                        <a routerLink=\\\"/user/{{ i.pubKey }}\\\" style=\\\"cursor: pointer;\\\">{{ i.name }}</a>\\n                      </div>\\n                      <small class=\\\"pb-2\\\">{{ i.email }}</small>\\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n              <div class=\\\"col-12 text-center\\\" *ngIf=\\\"!this.as.currentUserValue\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-danger\\\" routerLink=\\\"/login\\\">\\n                  Harap Masuk / Daftar Untuk Ikut Serta\\n                </button>\\n              </div>\\n              <div class=\\\"col-12 text-center\\\" *ngIf=\\\"this.as.currentUserValue\\\">\\n                <div *ngIf=\\\"this.as.currentUserValue.role == 'voter' && election.electionCreator != this.as.currentUserValue.pubKey\\\">\\n                  <div *ngIf=\\\"election.electionIsActive == 1\\\">\\n                    <button type=\\\"button\\\" *ngIf=\\\"joined == null\\\"\\n                      class=\\\"btn btn-sm btn-outline-primary\\\" (click)=\\\"confirmjoinElection()\\\">\\n                        Daftar Sebagai Partisipan Pemilih\\n                    </button>\\n                    <p *ngIf=\\\"joined == 0\\\">\\n                      Pendaftaran Sebagai Partisipan Telah Dikirimkan Dan Menunggu Konfirmasi Pemilik\\n                    </p>\\n                  </div>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-primary\\\"\\n                    *ngIf=\\\"joined == 1 || election.electionIsActive == 0\\\" routerLink=\\\"/election/{{ election.id }}\\\" >\\n                    Menuju Halaman Detail Pemilihan\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-12\\\">\\n          <div class=\\\"row\\\">\\n            <small class=\\\"col-6 text-left text-muted mt-auto\\\">{{ election.electionId }}</small>\\n            <small class=\\\"col-6 text-right text-muted\\\" *ngIf=\\\"this.as.currentUserValue\\\">\\n              <a routerLink=\\\"/my-election\\\" class=\\\"text-danger\\\"\\n                *ngIf=\\\"election.electionCreator == this.as.currentUserValue.pubKey && !router.url.includes('/election/')\\\">\\n                  You're The Owner, Manage This Election\\n                  <i class=\\\"fa fa-fw fa-arrow-right\\\"></i>\\n              </a>\\n            </small>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-confirm-modal (submitButton)=\\\"confirmModalCallback($event)\\\"></app-confirm-modal>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19zaGFyZWQvY29tcG9uZW50cy9tb2RhbC1lbGVjdGlvbi1kZXRhaWwvbW9kYWwtZWxlY3Rpb24tZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { ModalDirective } from 'ngx-bootstrap';\n\nimport { GlobalService } from '../../services/global.service';\n\nimport { Election } from '../../models/election';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../../services/api.service';\nimport { ElectionService } from '../../services/election.service';\nimport { ConfirmModalComponent } from '../confirm-modal/confirm-modal.component';\n\n@Component({\n  selector: 'app-modal-election-detail',\n  templateUrl: './modal-election-detail.component.html',\n  styleUrls: ['./modal-election-detail.component.css']\n})\nexport class ModalElectionDetailComponent implements OnInit {\n\n  @ViewChild('modalElectionDetail', { static: false }) modalElectionDetail: ModalDirective;\n  @ViewChild(ConfirmModalComponent, { static: true }) confirmModal: ConfirmModalComponent;\n\n  election: Election = null;\n  isModalOpen = false;\n\n  currentUser = null;\n\n  candidateListInfo = [];\n\n  joined = null;\n\n  constructor(\n    public router: Router,\n    private gs: GlobalService,\n    public as: AuthService,\n    private es: ElectionService\n  ) { }\n\n  ngOnInit() {\n    this.as.currentUser.subscribe(user => {\n      this.currentUser = user;\n    });\n  }\n\n  hideModal() {\n    this.modalElectionDetail.hide();\n  }\n\n  onHidden() {\n    this.isModalOpen = false;\n  }\n\n  showModal(e: Election) {\n    this.gs.log('[COMPONENT_MODAL-ELECTION]', e);\n    this.election = e;\n    this.isModalOpen = true;\n    this.findElectionInJoined();\n    this.es.getElectionCandidate(e.id).subscribe(\n      res => {\n        this.gs.log('[ElectionCandidate]', res);\n        this.candidateListInfo = res.result.candidatesInfo;\n      }\n    );\n  }\n\n  findElectionInJoined() {\n    if (this.currentUser) {\n      this.es.loadMyJoinedElection().subscribe(\n        res => {\n          this.gs.log('[MyJoinedElection]', res);\n          const myJoinedElection = res.results;\n          const joinedElection = myJoinedElection.find(mJE => mJE.id === this.election.id);\n          if (joinedElection) {\n            this.joined = joinedElection.joined;\n          }\n        }\n      );\n    }\n  }\n\n  confirmjoinElection() {\n    this.confirmModal.showModal({\n      callbackData: 'joinElectionConfirmation',\n      title: `Gabung '${this.election.electionName}'`,\n      body: 'Apakah Yakin Ingin Bergabung Sebagai Partisipan?',\n      submit: 'Ya'\n    });\n  }\n\n  joinElection() {\n    this.es.joinElection(this.election.id).subscribe(\n      res => {\n        this.openModalMessage(res);\n      },\n      err => {\n        this.openModalMessage(err.error);\n      }\n    );\n  }\n\n  openModalMessage(res) {\n    this.gs.log('[JoinElection]', res);\n    this.hideModal();\n    this.confirmModal.showModal({\n      callbackData: 'joinElectionFinished',\n      title: `Gabung '${this.election.electionName}'`,\n      body: JSON.stringify(res.result.message),\n      submit: 'OK'\n    });\n  }\n\n  confirmModalCallback(callbackData) {\n    if (callbackData === 'joinElectionConfirmation') {\n      this.joinElection();\n    } else if (callbackData === 'joinElectionFinished') {\n      this.router.navigateByUrl(`/election/${this.election.id}`);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { ModalModule, ButtonsModule } from 'ngx-bootstrap';\n\nimport { ModalElectionDetailComponent } from './modal-election-detail.component';\nimport { ConfirmModalModule } from '../confirm-modal/confirm-modal.module';\n\n@NgModule({\n  declarations: [ModalElectionDetailComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    ModalModule.forRoot(),\n    ButtonsModule.forRoot(),\n    ConfirmModalModule\n  ],\n  exports: [ModalElectionDetailComponent]\n})\nexport class ModalElectionDetailModule { }\n","import { Injectable } from '@angular/core';\n\nimport { GlobalService } from './global.service';\nimport { ApiService } from './api.service';\nimport { AuthService } from './auth.service';\n\nimport { Election } from '../models/election';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ElectionService {\n\n  constructor(\n    private api: ApiService,\n    private as: AuthService,\n    private gs: GlobalService\n  ) {\n    this.loadElection('active');\n    this.loadMyJoinedElection();\n  }\n\n  loadElection(status = 'all', row = 10) {\n    return this.api.getData(`/election?status=${status}&row=${row}`);\n  }\n\n  loadMyJoinedElection() {\n    return this.api.getData(`/election/my-joined-election`);\n  }\n\n  loadElectionByCreator(electionCreator, status = 'all', row = 10) {\n    return this.api.getData(`/election/?status=${status}&electionCreator=${electionCreator}&row=${row}`);\n  }\n\n  createNewElection(electionData) {\n    return this.api.postData(`/election/create`, electionData);\n  }\n\n  endElectionPeriode(id, data) {\n    return this.api.postData(`/election/${id}/end`, data);\n  }\n\n  getElectionData(id) {\n    return this.api.getData(`/election/${id}`);\n  }\n\n  getElectionCandidate(id) {\n    return this.api.getData(`/election/${id}/candidate`);\n  }\n\n  getElectionParticipant(id) {\n    return this.api.getData(`/election/${id}/participant`);\n  }\n\n  joinElection(id) {\n    return this.api.postData(`/election/${id}/register`);\n  }\n\n  addParticipant(id, data) {\n    return this.api.postData(`/election/${id}/participant`, data);\n  }\n\n  voteCandidate(id, data) {\n    return this.api.postData(`/election/${id}/vote`, data);\n  }\n\n  myVote(id, data) {\n    return this.api.postData(`/election/${id}/my-vote`, data);\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"default~election-election-module~home-home-module~my-election-my-election-module-es5.js"}